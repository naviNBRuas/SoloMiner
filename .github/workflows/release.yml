name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_release:
    name: Build and Release for ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: 
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
          - aarch64-unknown-linux-gnu
          # - x86_64-apple-darwin # Requires macOS runner

    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        target: ${{ matrix.target }}

    - name: Install cross
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build
      run: cross build --release --target ${{ matrix.target }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/${{ matrix.target }}/release/solominer${{ contains(matrix.target, 'windows') && '.exe' || '' }}
        asset_name: solominer-${{ github.ref_name }}-${{ matrix.target }}${{ contains(matrix.target, 'windows') && '.exe' || '' }}
        asset_content_type: application/octet-stream

  docker_release:
    name: Docker Release
    runs-on: ubuntu-latest
    needs: build_and_release

    steps:
    - uses: actions/checkout@v4
    - name: Build Docker image
      run: |
        docker build -t solominer:${{ github.ref_name }} .
        docker tag solominer:${{ github.ref_name }} solominer:latest
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push Docker image
      run: |
        docker push solominer:${{ github.ref_name }}
        docker push solominer:latest
